// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Universita.DAL;

#nullable disable

namespace Universita.DAL.Migrations
{
    [DbContext(typeof(UniversityDbContext))]
    [Migration("20240709100440_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Universita.DAL.Entityes.Aula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capienza")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Aule");
                });

            modelBuilder.Entity("Universita.DAL.Entityes.Corso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Corsi");
                });

            modelBuilder.Entity("Universita.DAL.Entityes.Docente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitoloDiStudio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Docenti");
                });

            modelBuilder.Entity("Universita.DAL.Entityes.Iscritti", b =>
                {
                    b.Property<int>("StudenteMatricola")
                        .HasColumnType("int");

                    b.Property<int>("CorsoId")
                        .HasColumnType("int");

                    b.HasKey("StudenteMatricola", "CorsoId");

                    b.HasIndex("CorsoId");

                    b.ToTable("Iscrizioni");
                });

            modelBuilder.Entity("Universita.DAL.Entityes.Lezione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AulaId")
                        .HasColumnType("int");

                    b.Property<int>("CorsoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocenteId")
                        .HasColumnType("int");

                    b.Property<int>("Durata")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrarioInizio")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AulaId");

                    b.HasIndex("CorsoId");

                    b.HasIndex("DocenteId");

                    b.ToTable("Lezioni");
                });

            modelBuilder.Entity("Universita.DAL.Entityes.Studente", b =>
                {
                    b.Property<int>("Matricola")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Matricola"));

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Matricola");

                    b.ToTable("Studenti");
                });

            modelBuilder.Entity("Universita.DAL.Entityes.Iscritti", b =>
                {
                    b.HasOne("Universita.DAL.Entityes.Corso", "Corso")
                        .WithMany("Iscrizioni")
                        .HasForeignKey("CorsoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Universita.DAL.Entityes.Studente", "Studente")
                        .WithMany("Iscrizioni")
                        .HasForeignKey("StudenteMatricola")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corso");

                    b.Navigation("Studente");
                });

            modelBuilder.Entity("Universita.DAL.Entityes.Lezione", b =>
                {
                    b.HasOne("Universita.DAL.Entityes.Aula", "Aula")
                        .WithMany()
                        .HasForeignKey("AulaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Universita.DAL.Entityes.Corso", "Corso")
                        .WithMany()
                        .HasForeignKey("CorsoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Universita.DAL.Entityes.Docente", "Docente")
                        .WithMany()
                        .HasForeignKey("DocenteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aula");

                    b.Navigation("Corso");

                    b.Navigation("Docente");
                });

            modelBuilder.Entity("Universita.DAL.Entityes.Corso", b =>
                {
                    b.Navigation("Iscrizioni");
                });

            modelBuilder.Entity("Universita.DAL.Entityes.Studente", b =>
                {
                    b.Navigation("Iscrizioni");
                });
#pragma warning restore 612, 618
        }
    }
}
